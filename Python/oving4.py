from os import read as rd


def insertionSort(A):
    lA=len(A)
    for i in range(1,lA):
        j=i
        x=A[i]
        while j>0 and A[j-1] > x:
            A[j]= A[j-1]
            j-=1
        A[j]=x
    return A

def radixSort(A):
    lA=len(A)
    if lA <=25:
        return insertionSort(A)
    ferdige = []
    buckets = [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]]
    dbapp=ferdige.append
    for s in A:
        try:
            buckets[s[2]-97].append(s)
        except:
            dbapp(s)
    return ferdige + [ b for blist in map(insertionSort,buckets) for b in blist ]

def main():
    """dicto = {b'a': 0, b'b': 1, b'c': 2, b'd': 3, b'e': 4, b'f': 5, b'g': 6, b'h': 7, b'i': 8, b'j': 9, b'k': 10,
             b'l': 11, b'm': 12, b'n': 13, b'o': 14, b'p': 15, b'q': 16, b'r': 17, b's': 18, b't': 19, b'u': 20,
             b'v': 21, b'w': 22, b'x': 23, b'y': 24, b'z': 25}"""
    #fd=opn("file.txt", nly)
    #fp=open("file.txt",'r')
    content=rd(0,6000000)
    li=content.split(b'\n')[1:]
    stri=bytes.strip
    #global dicto
    buckets=[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]]
    #strings=[line.rstrip() for line in stdin]
    try:
        for i in map(stri,li):
                buckets[i[0]-97].append(i)
    except:
        pass
    ferdige = [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]]
    rucket=[[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],
            [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],
            [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],
            [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],
            [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],
            [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],
            [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],
            [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],
            [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],
            [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],
            [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],
            [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],
            [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],
            [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],
            [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],
            [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],
            [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],
            [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],
            [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],
            [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],
            [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],
            [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],
            [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],
            [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],
            [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],
            [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]]]
    gg=range(26)
    for i in gg:
        ferdiges=ferdige[i]
        dbapp = ferdiges.append
        ruckets=rucket[i]

        for s in buckets[i]:
            try:
                ruckets[s[1]-97].append(s)
            except:
                dbapp(s)
    buckets=[ferdige[i]+ [ b for blist in map(radixSort, rucket[i]) for b in blist ] for i  in gg]
    #strings=list(map(stri,fp))
    #buckets=[radixSort(b, 1) for b in buckets]
    print(b'\n'.join([b for blist in buckets for b in blist]).decode("ascii"))
    #A = flexradix(strings, d)
    #print("".join(A), end='')


if __name__ == "__main__":
    main()

